{
    "name": "Custom Vision Model Transforms v2",
    "properties": {
        "activities": [
            {
                "name": "GetFilesToMosaic",
                "type": "GetMetadata",
                "dependsOn": [],
                "policy": {
                    "timeout": "7.00:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "dataset": {
                        "referenceName": "rawtifs",
                        "type": "DatasetReference",
                        "parameters": {
                            "containername": {
                                "value": "@pipeline().parameters.Prefix",
                                "type": "Expression"
                            },
                            "folderpath": "raw"
                        }
                    },
                    "fieldList": [
                        "childItems"
                    ],
                    "storeSettings": {
                        "type": "AzureBlobStorageReadSettings",
                        "recursive": true,
                        "enablePartitionDiscovery": false
                    },
                    "formatSettings": {
                        "type": "BinaryReadSettings"
                    }
                }
            },
            {
                "name": "Crop",
                "type": "SparkJob",
                "dependsOn": [
                    {
                        "activity": "More than one GeoTiff",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "7.00:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "sparkJob": {
                        "referenceName": "Crop",
                        "type": "SparkJobDefinitionReference"
                    },
                    "file": "abfss://spark-jobs@__synapse_storage_account__.dfs.core.windows.net/raster_crop/src/crop.py",
                    "args": [
                        "--storage_account_name",
                        "@pipeline().parameters.StorageAccountName",
                        "--storage_account_key",
                        "@pipeline().parameters.StorageAccountKey",
                        "--storage_container",
                        "@pipeline().parameters.Prefix",
                        "--src_folder_name",
                        "@variables('CropSourceFolder')",
                        "--config_file_name",
                        "config-aoi.json"
                    ],
                    "targetBigDataPool": {
                        "referenceName": "__synapse_pool_name__",
                        "type": "BigDataPoolReference"
                    },
                    "executorSize": "Medium",
                    "conf": {
                        "spark.dynamicAllocation.minExecutors": 2,
                        "spark.dynamicAllocation.maxExecutors": 3
                    },
                    "driverSize": "Medium",
                    "numExecutors": 2
                }
            },
            {
                "name": "Convert",
                "type": "SparkJob",
                "dependsOn": [
                    {
                        "activity": "Crop",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "7.00:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "sparkJob": {
                        "referenceName": "Convert",
                        "type": "SparkJobDefinitionReference"
                    },
                    "file": "abfss://spark-jobs@__synapse_storage_account__.dfs.core.windows.net/raster_convert/src/convert.py",
                    "args": [
                        "--storage_account_name",
                        "@pipeline().parameters.StorageAccountName",
                        "--storage_account_key",
                        "@pipeline().parameters.StorageAccountKey",
                        "--storage_container",
                        "@pipeline().parameters.Prefix",
                        "--src_folder_name",
                        "crop",
                        "--config_file_name",
                        "config-img-convert-png.json"
                    ],
                    "targetBigDataPool": {
                        "referenceName": "__synapse_pool_name__",
                        "type": "BigDataPoolReference"
                    },
                    "executorSize": "Medium",
                    "conf": {
                        "spark.dynamicAllocation.minExecutors": 2,
                        "spark.dynamicAllocation.maxExecutors": 3
                    },
                    "driverSize": "Medium",
                    "numExecutors": 2
                }
            },
            {
                "name": "Tiling",
                "type": "SparkJob",
                "dependsOn": [
                    {
                        "activity": "Convert",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "7.00:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "sparkJob": {
                        "referenceName": "Tiling",
                        "type": "SparkJobDefinitionReference"
                    },
                    "file": "abfss://spark-jobs@__synapse_storage_account__.dfs.core.windows.net/raster_tiling/src/tiling.py",
                    "args": [
                        "--storage_account_name",
                        "@pipeline().parameters.StorageAccountName",
                        "--storage_container",
                        "@pipeline().parameters.Prefix",
                        "--src_folder_name",
                        "convert",
                        "--file_name",
                        "output.png",
                        "--tile_size",
                        "512",
                        "--storage_account_key",
                        "@pipeline().parameters.StorageAccountKey"
                    ],
                    "targetBigDataPool": {
                        "referenceName": "__synapse_pool_name__",
                        "type": "BigDataPoolReference"
                    },
                    "executorSize": "Medium",
                    "conf": {
                        "spark.dynamicAllocation.minExecutors": 2,
                        "spark.dynamicAllocation.maxExecutors": 3
                    },
                    "driverSize": "Medium",
                    "numExecutors": 2
                }
            },
            {
                "name": "More than one GeoTiff",
                "type": "IfCondition",
                "dependsOn": [
                    {
                        "activity": "For Each File to Mosaic",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "expression": {
                        "value": "@greater(length(activity('GetFilesToMosaic').output.childItems),1)",
                        "type": "Expression"
                    },
                    "ifFalseActivities": [
                        {
                            "name": "Set Crop Source Folder to raw",
                            "type": "SetVariable",
                            "dependsOn": [],
                            "userProperties": [],
                            "typeProperties": {
                                "variableName": "CropSourceFolder",
                                "value": "raw"
                            }
                        }
                    ],
                    "ifTrueActivities": [
                        {
                            "name": "Mosaic",
                            "type": "SparkJob",
                            "dependsOn": [],
                            "policy": {
                                "timeout": "7.00:00:00",
                                "retry": 0,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "sparkJob": {
                                    "referenceName": "Mosaic",
                                    "type": "SparkJobDefinitionReference"
                                },
                                "file": "abfss://spark-jobs@__synapse_storage_account__.dfs.core.windows.net/raster_mosaic/src/mosaic.py",
                                "args": [
                                    "--storage_account_name",
                                    "@pipeline().parameters.StorageAccountName",
                                    "--storage_account_key",
                                    "@pipeline().parameters.StorageAccountKey",
                                    "--storage_container",
                                    "@pipeline().parameters.Prefix",
                                    "--src_folder_name",
                                    "raw"
                                ],
                                "targetBigDataPool": {
                                    "referenceName": "__synapse_pool_name__",
                                    "type": "BigDataPoolReference"
                                },
                                "executorSize": "Medium",
                                "conf": {
                                    "spark.dynamicAllocation.minExecutors": 2,
                                    "spark.dynamicAllocation.maxExecutors": 3
                                },
                                "driverSize": "Medium",
                                "numExecutors": 2
                            }
                        },
                        {
                            "name": "Set Crop Source Folder to mosaic",
                            "type": "SetVariable",
                            "dependsOn": [
                                {
                                    "activity": "Mosaic",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                                "variableName": "CropSourceFolder",
                                "value": "mosaic"
                            }
                        }
                    ]
                }
            },
            {
                "name": "For Each File to Mosaic",
                "type": "ForEach",
                "dependsOn": [
                    {
                        "activity": "GetFilesToMosaic",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "items": {
                        "value": "@activity('GetFilesToMosaic').output.childItems",
                        "type": "Expression"
                    },
                    "isSequential": true,
                    "activities": [
                        {
                            "name": "Set Mosaic File Names",
                            "type": "SetVariable",
                            "dependsOn": [
                                {
                                    "activity": "Store Temp Mosaic File Names",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                                "variableName": "MosaicFileNames",
                                "value": {
                                    "value": "@concat(variables('TempMosaicFileNames'), if(equals(variables('TempMosaicFileNames'), ''),'',','), item().name)",
                                    "type": "Expression"
                                }
                            }
                        },
                        {
                            "name": "Store Temp Mosaic File Names",
                            "type": "SetVariable",
                            "dependsOn": [],
                            "userProperties": [],
                            "typeProperties": {
                                "variableName": "TempMosaicFileNames",
                                "value": {
                                    "value": "@variables('MosaicFileNames')",
                                    "type": "Expression"
                                }
                            }
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "Prefix": {
                "type": "string",
                "defaultValue": ""
            },
            "StorageAccountName": {
                "type": "string",
                "defaultValue": ""
            },
            "StorageAccountKey": {
                "type": "string",
                "defaultValue": ""
            }
        },
        "variables": {
            "FunctionCompleted": {
                "type": "String",
                "defaultValue": "None"
            },
            "FunctionError": {
                "type": "String"
            },
            "MosaicFileNames": {
                "type": "String"
            },
            "TempMosaicFileNames": {
                "type": "String"
            },
            "CropSourceFolder": {
                "type": "String"
            }
        },
        "annotations": [],
        "lastPublishTime": "2022-03-06T06:06:58Z"
    },
    "type": "Microsoft.Synapse/workspaces/pipelines"
}